---
name: Release
# yamllint disable-line rule:truthy
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      # Push events to matching v*
      - 'v*'

env:
  ESERVER_IMAGE_NAME: lfedge/eden-http-server

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: setup
        run: |
          sudo apt update
          sudo apt install -y qemu-utils qemu-system-x86
      - name: Build project
        run: |
          make build
          make build-tests
          tar -zcvf eden.tar.gz -C ./ ./eden ./README.md dist docs tests
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./eden.tar.gz
          asset_name: eden.tar.gz
          asset_content_type: application/gzip
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: eserver
          file: eserver/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{env.ESERVER_IMAGE_NAME}}:${{env.RELEASE_VERSION}}
