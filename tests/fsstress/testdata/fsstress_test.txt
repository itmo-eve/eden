{{$test_opts := "-test.v -name fsstress-app"}}

# Starting of reboot detector with a 1 reboot limit
! test eden.reboot.test -test.v -timewait 96h -reboot=0 -count=1 &

#TestFSstressVMStart checks if app processed by EVE, app in RUNNING state
test eden.fsstress.test {{$test_opts}} -timewait 15m -test.run TestFSstressVMStart
stdout '--- PASS: TestFSstressVMStart'

# TestAccess checks if SSH of app is accessible
test eden.fsstress.test {{$test_opts}} -timewait 10m -test.run TestAccess
stdout '--- PASS: TestAccess'

# TestRunStres checks if SSH of app is accessible
test eden.fsstress.test {{$test_opts}} -timewait 96h -test.run TestRunStress
stdout '--- PASS: TestRunStress'

#TestFSstressVMDelete initiates deleting of app and checks if app deleted from EVE
test eden.fsstress.test {{$test_opts}} -timewait 10m -test.run TestFSstressVMDelete
stdout '--- PASS: TestFSstressVMDelete'

# Test's config. file
-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
