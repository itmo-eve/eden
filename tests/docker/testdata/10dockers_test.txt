{{$test_opts := "-test.v -timewait 40m"}}

[!exec:curl] stop

eden -t 1s pod ps

# Starting of reboot detector with a 2 reboots limit
! test eden.reboot.test {{$test_opts}} -reboot=0 -count=2 &

# Run by docker's actor
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t1 -externalPort 8027 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t3 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t4 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t5 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t6 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t7 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t8 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t9 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t10 -externalPort 0 -memory 100M
stdout '--- PASS: TestDockerStart'
test eden.docker.test {{$test_opts}} -test.run TestDockerStart -name t2 -externalPort 8028 -memory 100M
stdout '--- PASS: TestDockerStart'

# Dockers detecting
eden -t 1m pod ps
stdout 't1.+library/nginx:latest.+RUNNING'
stdout 't2.+library/nginx:latest.+RUNNING'
stdout 't3.+library/nginx:latest.+RUNNING'
stdout 't4.+library/nginx:latest.+RUNNING'
stdout 't5.+library/nginx:latest.+RUNNING'
stdout 't6.+library/nginx:latest.+RUNNING'
stdout 't7.+library/nginx:latest.+RUNNING'
stdout 't8.+library/nginx:latest.+RUNNING'
stdout 't9.+library/nginx:latest.+RUNNING'
stdout 't10.+library/nginx:latest.+RUNNING'

# Ngnix detecting
exec -t 1m curl localhost:8027
stdout 'Welcome to nginx'
exec -t 1m curl localhost:8028
stdout 'Welcome to nginx'

# Stop by docker's actor
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t1
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t2
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t3
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t4
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t5
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t6
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t7
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t8
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t9
stdout '--- PASS: TestDockerDelete'
test eden.docker.test {{$test_opts}} -test.run TestDockerDelete -name t10
stdout '--- PASS: TestDockerDelete'

# Dockers detecting
eden -t 1m pod ps
! stdout '^t[12]'

# Test's config. file
-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
